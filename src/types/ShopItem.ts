/* tslint:disable */
/* eslint-disable */
/**
 * yumeshop
 * yumeshopのAPIが定義されています。
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Tag, TagFromJSON, TagToJSON } from './Tag';
import { Price, PriceFromJSON, PriceToJSON } from './Price';
import { Category, CategoryFromJSON, CategoryToJSON } from './Category';
import { Campaign, CampaignFromJSON, CampaignToJSON } from './Campaign';

/**
 * ショップアイテムのmodel
 * @export
 * @interface ShopItem
 */
export interface ShopItem {
  /**
   * id
   * @type {string}
   * @memberof ShopItem
   */
  id: string;
  /**
   * 商品の名前
   * @type {string}
   * @memberof ShopItem
   */
  name: string;
  /**
   * 商品のサムネイル画像のURL
   * @type {string}
   * @memberof ShopItem
   */
  thumbnail: string;
  /**
   *
   * @type {Price}
   * @memberof ShopItem
   */
  price: Price;
  /**
   * タグの配列
   * @type {Array<Tag>}
   * @memberof ShopItem
   */
  tags: Array<Tag>;
  /**
   * カテゴリの配列
   * @type {Array<Category>}
   * @memberof ShopItem
   */
  categories: Array<Category>;
  /**
   * キャンペーンの配列
   * @type {Array<Campaign>}
   * @memberof ShopItem
   */
  campaigns: Array<Campaign>;
}

export function ShopItemFromJSON(json: any): ShopItem {
  return ShopItemFromJSONTyped(json, false);
}

export function ShopItemFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ShopItem {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    name: json['name'],
    thumbnail: json['thumbnail'],
    price: PriceFromJSON(json['price']),
    tags: (json['tags'] as Array<any>).map(TagFromJSON),
    categories: (json['categories'] as Array<any>).map(CategoryFromJSON),
    campaigns: (json['campaigns'] as Array<any>).map(CampaignFromJSON),
  };
}

export function ShopItemToJSON(value?: ShopItem | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    name: value.name,
    thumbnail: value.thumbnail,
    price: PriceToJSON(value.price),
    tags: (value.tags as Array<any>).map(TagToJSON),
    categories: (value.categories as Array<any>).map(CategoryToJSON),
    campaigns: (value.campaigns as Array<any>).map(CampaignToJSON),
  };
}
